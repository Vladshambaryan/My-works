{
	"info": {
		"_postman_id": "e290e492-d033-44a7-ad15-3ef81475d218",
		"name": "04_Automation-Petstore-Order_Advanced",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27779519"
	},
	"item": [
		{
			"name": "Place an order for a pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response Time is less than 1500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1500);\r",
							"});\r",
							"\r",
							"pm.test(\"Response Size is less than 1000B\", function () {\r",
							"    pm.expect(pm.response.responseSize).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Body has correct Keys\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"id\");\r",
							"    pm.expect(pm.response.text()).to.include(\"petId\");\r",
							"    pm.expect(pm.response.text()).to.include(\"quantity\");\r",
							"    pm.expect(pm.response.text()).to.include(\"shipDate\");\r",
							"    pm.expect(pm.response.text()).to.include(\"status\");\r",
							"    pm.expect(pm.response.text()).to.include(\"complete\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body has correct Values\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(55);\r",
							"    pm.expect(pm.response.text()).to.include(777);\r",
							"    pm.expect(pm.response.text()).to.include(7777);\r",
							"    pm.expect(pm.response.text()).to.include(\"2023-06-03T01:18:22.962\");\r",
							"    pm.expect(pm.response.text()).to.include(\"approved\");\r",
							"    pm.expect(pm.response.text()).to.include(true);\r",
							"});\r",
							"\r",
							"pm.test(\"Keys-Values is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(55);\r",
							"    pm.expect(jsonData.petId).to.eql(777);\r",
							"    pm.expect(jsonData.quantity).to.eql(7777);\r",
							"    pm.expect(jsonData.status).to.eql(\"approved\");\r",
							"    pm.expect(jsonData.complete).to.eql(true);\r",
							"});\r",
							"\r",
							"pm.test(\"Enite Header Keys-Values is correct\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
							"    pm.response.to.have.header(\"Transfer-Encoding\", \"chunked\");\r",
							"    pm.response.to.have.header(\"Connection\", \"keep-alive\");\r",
							"    pm.response.to.have.header(\"Access-Control-Allow-Origin\", \"*\");\r",
							"    pm.response.to.have.header(\"Access-Control-Allow-Methods\", \"GET, POST, DELETE, PUT\");\r",
							"    pm.response.to.have.header(\"Access-Control-Allow-Headers\", \"Content-Type, api_key, Authorization\");\r",
							"    pm.response.to.have.header(\"Server\", \"Jetty(9.2.9.v20150224)\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.clear()\r",
							"\r",
							"pm.environment.set(\"ID\", Math.floor(Math.random() * 101));\r",
							"\r",
							"pm.environment.set(\"PETID\", Math.floor(Math.random() * 101));\r",
							"\r",
							"pm.environment.set(\"QTY\", Math.floor(Math.random() * 101));\r",
							"\r",
							"pm.environment.set(\"SHIPDATE\", new Date());\r",
							"\r",
							"//pm.environment.set(\"status\", \"placed\");\r",
							"//pm.environment.set(\"complete\", false);\r",
							"\r",
							"//Date in UTC format\r",
							"//pm.environment.set(\"shipDate\", new Date().getTime());\r",
							"\r",
							"let statusPick = [\"placed\", \"approved\", \"delivered\"];\r",
							"let randomStatus = statusPick[Math.floor(Math.random() * statusPick.length)];\r",
							"pm.environment.set(\"STATUS\", randomStatus);\r",
							"\r",
							"let completePick = [true, false];\r",
							"let randomComplete = completePick[Math.floor(Math.random() * completePick.length)];\r",
							"pm.environment.set(\"COMPLETE\", randomComplete);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 55,\r\n    \"petId\": 777,\r\n    \"quantity\": 7777,\r\n    \"shipDate\": \"2023-06-03T01:18:22.962Z\",\r\n    \"status\": \"approved\",\r\n    \"complete\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/store/order",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"store",
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "Find purchase order by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response Time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Response Size is less than 1000B\", function () {\r",
							"    pm.expect(pm.response.responseSize).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Body has correct Keys\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"id\");\r",
							"    pm.expect(pm.response.text()).to.include(\"petId\");\r",
							"    pm.expect(pm.response.text()).to.include(\"quantity\");\r",
							"    pm.expect(pm.response.text()).to.include(\"shipDate\");\r",
							"    pm.expect(pm.response.text()).to.include(\"status\");\r",
							"    pm.expect(pm.response.text()).to.include(\"complete\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body has correct Values\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(55);\r",
							"    pm.expect(pm.response.text()).to.include(777);\r",
							"    pm.expect(pm.response.text()).to.include(7777);\r",
							"    pm.expect(pm.response.text()).to.include(\"2023-06-03T01:18:22.962\");\r",
							"    pm.expect(pm.response.text()).to.include(\"approved\");\r",
							"    pm.expect(pm.response.text()).to.include(true);\r",
							"});\r",
							"\r",
							"pm.test(\"Keys-Values is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(55);\r",
							"    pm.expect(jsonData.petId).to.eql(777);\r",
							"    pm.expect(jsonData.quantity).to.eql(7777);\r",
							"    pm.expect(jsonData.status).to.eql(\"approved\");\r",
							"    pm.expect(jsonData.complete).to.eql(true);\r",
							"});\r",
							"\r",
							"pm.test(\"Enite Header Keys-Values is correct\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
							"    pm.response.to.have.header(\"Transfer-Encoding\", \"chunked\");\r",
							"    pm.response.to.have.header(\"Connection\", \"keep-alive\");\r",
							"    pm.response.to.have.header(\"Access-Control-Allow-Origin\", \"*\");\r",
							"    pm.response.to.have.header(\"Access-Control-Allow-Methods\", \"GET, POST, DELETE, PUT\");\r",
							"    pm.response.to.have.header(\"Access-Control-Allow-Headers\", \"Content-Type, api_key, Authorization\");\r",
							"    pm.response.to.have.header(\"Server\", \"Jetty(9.2.9.v20150224)\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://petstore.swagger.io/v2/store/order/55",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"store",
						"order",
						"55"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete purchase order by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response Time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Response Size is less than 1000B\", function () {\r",
							"    pm.expect(pm.response.responseSize).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Body has correct Keys\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"code\");\r",
							"    pm.expect(pm.response.text()).to.include(\"type\");\r",
							"    pm.expect(pm.response.text()).to.include(\"message\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body has correct Values\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(200);\r",
							"    pm.expect(pm.response.text()).to.include(\"unknown\");\r",
							"    pm.expect(pm.response.text()).to.include(\"55\");\r",
							"});\r",
							"\r",
							"pm.test(\"Keys-Values is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.code).to.eql(200);\r",
							"    pm.expect(jsonData.type).to.eql(\"unknown\");\r",
							"    pm.expect(jsonData.message).to.eql(\"55\");\r",
							"});\r",
							"\r",
							"pm.test(\"Enite Header Keys-Values is correct\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
							"    pm.response.to.have.header(\"Transfer-Encoding\", \"chunked\");\r",
							"    pm.response.to.have.header(\"Connection\", \"keep-alive\");\r",
							"    pm.response.to.have.header(\"Access-Control-Allow-Origin\", \"*\");\r",
							"    pm.response.to.have.header(\"Access-Control-Allow-Methods\", \"GET, POST, DELETE, PUT\");\r",
							"    pm.response.to.have.header(\"Access-Control-Allow-Headers\", \"Content-Type, api_key, Authorization\");\r",
							"    pm.response.to.have.header(\"Server\", \"Jetty(9.2.9.v20150224)\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://petstore.swagger.io/v2/store/order/55",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"store",
						"order",
						"55"
					]
				}
			},
			"response": []
		},
		{
			"name": "Find Deleted order by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404 is expected\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Response Time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Response Size is less than 1000B\", function () {\r",
							"    pm.expect(pm.response.responseSize).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Body has correct Keys\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"code\");\r",
							"    pm.expect(pm.response.text()).to.include(\"type\");\r",
							"    pm.expect(pm.response.text()).to.include(\"message\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body has correct Values\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(1);\r",
							"    pm.expect(pm.response.text()).to.include(\"error\");\r",
							"    pm.expect(pm.response.text()).to.include(\"Order not found\");\r",
							"});\r",
							"\r",
							"pm.test(\"Keys-Values is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.code).to.eql(1);\r",
							"    pm.expect(jsonData.type).to.eql(\"error\");\r",
							"    pm.expect(jsonData.message).to.eql(\"Order not found\");\r",
							"});\r",
							"\r",
							"pm.test(\"Enite Header Keys-Values is correct\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
							"    pm.response.to.have.header(\"Transfer-Encoding\", \"chunked\");\r",
							"    pm.response.to.have.header(\"Connection\", \"keep-alive\");\r",
							"    pm.response.to.have.header(\"Access-Control-Allow-Origin\", \"*\");\r",
							"    pm.response.to.have.header(\"Access-Control-Allow-Methods\", \"GET, POST, DELETE, PUT\");\r",
							"    pm.response.to.have.header(\"Access-Control-Allow-Headers\", \"Content-Type, api_key, Authorization\");\r",
							"    pm.response.to.have.header(\"Server\", \"Jetty(9.2.9.v20150224)\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://petstore.swagger.io/v2/store/order/77",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"store",
						"order",
						"77"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "Y-VRPIc11thneYhrfWkcQDkpZulAKk0Va6w07e8Igiw.eyJpbnN0YW5jZUlkIjoiYmE2Y2RiNDUtZjhhNy00ZjlmLWE4MzEtMDNiYWI1OTgzNDMyIiwiYXBwRGVmSWQiOiIxNDUxN2UxYS0zZmYwLWFmOTgtNDA4ZS0yYmQ2OTUzYzM2YTIiLCJtZXRhU2l0ZUlkIjoiMjhiNzkzZDYtNTQyNC00MDU4LTgwNDktMDI2YTRkYjAyODJmIiwic2lnbkRhdGUiOiIyMDIzLTA2LTE0VDE2OjU4OjI3LjcxNFoiLCJ1aWQiOiJlZmRhMzYyMy0xY2JmLTRlODMtODkxYi1iZTgxNTFmNTA1NWQiLCJkZW1vTW9kZSI6ZmFsc2UsImFpZCI6ImI4MmQwZmI2LWRjMGYtNDJjYy1iMjFhLWNiNzgwYzAzYmMxNiIsImJpVG9rZW4iOiI5MmRiNDg5My1hYzgzLTBmYzctMjg3OC0wMWQwZjgyODFjMWQiLCJzaXRlT3duZXJJZCI6ImY5MTRmMTFjLWFhYjMtNDUyNy04ZDRlLWJhYjc2MjE0M2E2MCIsImV4cGlyYXRpb25EYXRlIjoiMjAyMy0wNi0xNFQyMDo1ODoyNy43MTRaIiwiaGFzVXNlclJvbGUiOmZhbHNlfQ",
				"type": "string"
			},
			{
				"key": "key",
				"value": "Autorization",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}